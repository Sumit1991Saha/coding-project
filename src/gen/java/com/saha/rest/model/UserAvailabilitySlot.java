/*
 * Harbor Calendar Api's
 * Harbor Calendar 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.saha.rest.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * User Availability Slot definition
 */
@ApiModel(description = "User Availability Slot definition")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2023-07-12T20:23:11.968+05:30[Asia/Kolkata]")
public class UserAvailabilitySlot   {
  @JsonProperty("id")
  private Long id;

  @JsonProperty("calendarId")
  private Long calendarId;

  @JsonProperty("startTime")
  private String startTime;

  @JsonProperty("endTime")
  private String endTime;

  public UserAvailabilitySlot id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * User does not need to provide this. Will be generated by system and returned in response.
   * @return id
   **/
  @JsonProperty("id")
  @ApiModelProperty(value = "User does not need to provide this. Will be generated by system and returned in response.")
  
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public UserAvailabilitySlot calendarId(Long calendarId) {
    this.calendarId = calendarId;
    return this;
  }

  /**
   * Id of the calendar in which the availability slot is.
   * @return calendarId
   **/
  @JsonProperty("calendarId")
  @ApiModelProperty(required = true, value = "Id of the calendar in which the availability slot is.")
  @NotNull 
  public Long getCalendarId() {
    return calendarId;
  }

  public void setCalendarId(Long calendarId) {
    this.calendarId = calendarId;
  }

  public UserAvailabilitySlot startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * The date in the following format :- DD/MM/YYYY HH:MM
   * @return startTime
   **/
  @JsonProperty("startTime")
  @ApiModelProperty(example = "01/01/2019 12:00", required = true, value = "The date in the following format :- DD/MM/YYYY HH:MM")
  @NotNull 
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  public UserAvailabilitySlot endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * The date in the following format :- DD/MM/YYYY HH:MM
   * @return endTime
   **/
  @JsonProperty("endTime")
  @ApiModelProperty(example = "01/01/2019 15:00", required = true, value = "The date in the following format :- DD/MM/YYYY HH:MM")
  @NotNull 
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserAvailabilitySlot userAvailabilitySlot = (UserAvailabilitySlot) o;
    return Objects.equals(this.id, userAvailabilitySlot.id) &&
        Objects.equals(this.calendarId, userAvailabilitySlot.calendarId) &&
        Objects.equals(this.startTime, userAvailabilitySlot.startTime) &&
        Objects.equals(this.endTime, userAvailabilitySlot.endTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, calendarId, startTime, endTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserAvailabilitySlot {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    calendarId: ").append(toIndentedString(calendarId)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

